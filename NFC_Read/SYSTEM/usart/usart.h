#ifndef __USART_H
#define __USART_H

#include "sys.h"
#include "stdio.h"


///////////////////////////////////////////////////////////////////////////////////////////////////////////////

//定义串口1最大接收字节数
#define USART1_REC_LEN    200

//如果想串口1中断接收，请不要注释以下宏定义
#define EN_USART1_RX    1		//使能（1）/禁止（0）串口1接收

//串口1接收缓冲,最大USART1_REC_LEN个字节,末字节为换行符
extern u8  USART1_RX_BUF[USART1_REC_LEN];

//串口1接收状态标记值，定义如下：
//bit15，	接收完成标志，即当前接收到的是0x0a，并且前一次收到的是0x0d(bit 14 为1)时该位置1
//bit14，	接收到0x0d标志，即接收到0x0d时该位置1
//bit13~0，	接收到的有效字节数目
extern u16 USART1_RX_STA;

// 串口1初始化
void usart1_init(u32 baudrate);

// 向串口1发送length长度的数据data
void usart1_send(u8 *data, u8 length);

//清零串口1接收缓冲区前 num 个字节
void clean_usart1_rx_buff(u16 num);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////////////////////////

//定义串口2最大接收字节数
#define USART2_REC_LEN    200

//如果想串口2中断接收，请不要注释以下宏定义
#define EN_USART2_RX    1		//使能（1）/禁止（0）串口2接收

//串口2接收缓冲,最大USART2_REC_LEN个字节,末字节为换行符
extern u8  USART2_RX_BUF[USART2_REC_LEN];

//串口2接收状态标记值，定义如下：
//bit15，	接收完成标志，即当前接收到的是0x0a，并且前一次收到的是0x0d(bit 14 为1)时该位置1
//bit14，	接收到0x0d标志，即接收到0x0d时该位置1
//bit13~0，	接收到的有效字节数目
extern u16 USART2_RX_STA;

// 串口2初始化
void usart2_init(u32 baudrate);

// 向串口2发送length长度的数据data
void usart2_send(u8 *data, u8 length);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif


